#version 330 core

out vec4 FragColor;

in vec2 TexCoords;
in vec3 FragPos;
in vec3 Normal;

uniform vec3 viewPos;
uniform vec3 objCol;
uniform vec3 lightCol;
uniform sampler2D mat_diff; // material diffuse
// uniform float mat_spec; // material specular

void main()
{
	vec3 res = vec3(0);
	vec3 lightPos = vec3(5, 5, 5);

	//ambient
	float amb = 0.1f;
	res += amb * vec3(texture(mat_diff, TexCoords));

	//diffuse
	vec3 norm = normalize(Normal);
	vec3 lightDir = normalize(lightPos - FragPos);  
	float diff = max(dot(norm, lightDir), 0.0);
	res += diff * vec3(texture(mat_diff, TexCoords));

	res *= lightCol/* * objCol*/;
	FragColor = vec4(res, 1);
}